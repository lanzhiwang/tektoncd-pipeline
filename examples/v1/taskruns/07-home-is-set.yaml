apiVersion: tekton.dev/v1
kind: TaskRun
metadata:
  generateName: home-is-set-
spec:
  taskSpec:
    steps:
      - image: ubuntu
        script: |
          #!/usr/bin/env bash
          set -x
          pwd
          env
          apt-get update
          apt-get install -y tree
          tree -a /tekton
          tree -a /workspace
      - image: ubuntu
        env:
          - name: HOME
            value: /tekton/home
        script: |
          #!/usr/bin/env bash
          set -x
          pwd
          env
          [[ $HOME == /tekton/home ]]

# $ nerdctl run -ti --rm ubuntu -- env
# PATH=/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin
# TERM=xterm
# HOME=/root
# $

# ---
# apiVersion: v1
# kind: Pod
# metadata:
#   annotations:
#     pipeline.tekton.dev/release: d714545
#     tekton.dev/ready: READY
#   labels:
#     app.kubernetes.io/managed-by: tekton-pipelines
#     tekton.dev/taskRun: home-is-set-ql9fx
#   name: home-is-set-ql9fx-pod
#   namespace: default
#   ownerReferences:
#   - apiVersion: tekton.dev/v1
#     blockOwnerDeletion: true
#     controller: true
#     kind: TaskRun
#     name: home-is-set-ql9fx
#     uid: d0f2b874-0142-41dc-99bf-6ed3ca68624d
# spec:
#   activeDeadlineSeconds: 5400
#   containers:
#   - args:
#     - -wait_file
#     - /tekton/downward/ready
#     - -wait_file_content
#     - -post_file
#     - /tekton/run/0/out
#     - -termination_path
#     - /tekton/termination
#     - -step_metadata_dir
#     - /tekton/run/0/status
#     - -entrypoint
#     - /tekton/scripts/script-0-zmtcz
#     - --
#     command:
#     - /tekton/bin/entrypoint
#     image: ubuntu
#     imagePullPolicy: Always
#     name: step-unnamed-0
#     resources: {}
#     terminationMessagePath: /tekton/termination
#     terminationMessagePolicy: File
#     volumeMounts:
#     - mountPath: /tekton/scripts
#       name: tekton-internal-scripts
#       readOnly: true
#     - mountPath: /tekton/downward
#       name: tekton-internal-downward
#       readOnly: true
#     - mountPath: /tekton/creds
#       name: tekton-creds-init-home-0
#     - mountPath: /tekton/run/0
#       name: tekton-internal-run-0
#     - mountPath: /tekton/run/1
#       name: tekton-internal-run-1
#       readOnly: true
#     - mountPath: /tekton/bin
#       name: tekton-internal-bin
#       readOnly: true
#     - mountPath: /workspace
#       name: tekton-internal-workspace
#     - mountPath: /tekton/home
#       name: tekton-internal-home
#     - mountPath: /tekton/results
#       name: tekton-internal-results
#     - mountPath: /tekton/steps
#       name: tekton-internal-steps
#       readOnly: true
#     - mountPath: /var/run/secrets/kubernetes.io/serviceaccount
#       name: kube-api-access-6r8vx
#       readOnly: true
#   - args:
#     - -wait_file
#     - /tekton/run/0/out
#     - -post_file
#     - /tekton/run/1/out
#     - -termination_path
#     - /tekton/termination
#     - -step_metadata_dir
#     - /tekton/run/1/status
#     - -entrypoint
#     - /tekton/scripts/script-1-6d5kt
#     - --
#     command:
#     - /tekton/bin/entrypoint
#     env:
#     - name: HOME
#       value: /tekton/home
#     image: ubuntu
#     imagePullPolicy: Always
#     name: step-unnamed-1
#     resources: {}
#     terminationMessagePath: /tekton/termination
#     terminationMessagePolicy: File
#     volumeMounts:
#     - mountPath: /tekton/scripts
#       name: tekton-internal-scripts
#       readOnly: true
#     - mountPath: /tekton/creds
#       name: tekton-creds-init-home-1
#     - mountPath: /tekton/run/0
#       name: tekton-internal-run-0
#       readOnly: true
#     - mountPath: /tekton/run/1
#       name: tekton-internal-run-1
#     - mountPath: /tekton/bin
#       name: tekton-internal-bin
#       readOnly: true
#     - mountPath: /workspace
#       name: tekton-internal-workspace
#     - mountPath: /tekton/home
#       name: tekton-internal-home
#     - mountPath: /tekton/results
#       name: tekton-internal-results
#     - mountPath: /tekton/steps
#       name: tekton-internal-steps
#       readOnly: true
#     - mountPath: /var/run/secrets/kubernetes.io/serviceaccount
#       name: kube-api-access-6r8vx
#       readOnly: true
#   dnsPolicy: ClusterFirst
#   enableServiceLinks: true
#   initContainers:
#   - command:
#     - /ko-app/entrypoint
#     - init
#     - /ko-app/entrypoint
#     - /tekton/bin/entrypoint
#     - step-unnamed-0
#     - step-unnamed-1
#     image: ghcr.io/lanzhiwang/tekton-releases/tektoncd/pipeline/cmd/entrypoint:v0.57.0
#     imagePullPolicy: IfNotPresent
#     name: prepare
#     resources: {}
#     terminationMessagePath: /dev/termination-log
#     terminationMessagePolicy: File
#     volumeMounts:
#     - mountPath: /tekton/bin
#       name: tekton-internal-bin
#     - mountPath: /tekton/steps
#       name: tekton-internal-steps
#     - mountPath: /var/run/secrets/kubernetes.io/serviceaccount
#       name: kube-api-access-6r8vx
#       readOnly: true
#     workingDir: /
#   - args:
#     - -c
#     - |
#       scriptfile="/tekton/scripts/script-0-zmtcz"
#       touch ${scriptfile} && chmod +x ${scriptfile}
#       cat > ${scriptfile} << '_EOF_'
#       IyEvdXNyL2Jpbi9lbnYgYmFzaApzZXQgLXgKcHdkCmVudgphcHQtZ2V0IHVwZGF0ZQphcHQtZ2V0IGluc3RhbGwgLXkgdHJlZQp0cmVlIC1hIC90ZWt0b24KdHJlZSAtYSAvd29ya3NwYWNlCg==
#       _EOF_
#       /tekton/bin/entrypoint decode-script "${scriptfile}"
#       scriptfile="/tekton/scripts/script-1-6d5kt"
#       touch ${scriptfile} && chmod +x ${scriptfile}
#       cat > ${scriptfile} << '_EOF_'
#       IyEvdXNyL2Jpbi9lbnYgYmFzaApzZXQgLXgKcHdkCmVudgpbWyAkSE9NRSA9PSAvdGVrdG9uL2hvbWUgXV0K
#       _EOF_
#       /tekton/bin/entrypoint decode-script "${scriptfile}"
#     command:
#     - sh
#     image: ghcr.io/lanzhiwang/chainguard/busybox:v1.0.0
#     imagePullPolicy: IfNotPresent
#     name: place-scripts
#     resources: {}
#     terminationMessagePath: /dev/termination-log
#     terminationMessagePolicy: File
#     volumeMounts:
#     - mountPath: /tekton/scripts
#       name: tekton-internal-scripts
#     - mountPath: /tekton/bin
#       name: tekton-internal-bin
#     - mountPath: /var/run/secrets/kubernetes.io/serviceaccount
#       name: kube-api-access-6r8vx
#       readOnly: true
#   nodeName: 192.168.143.6
#   preemptionPolicy: PreemptLowerPriority
#   priority: 0
#   restartPolicy: Never
#   schedulerName: default-scheduler
#   securityContext: {}
#   serviceAccount: default
#   serviceAccountName: default
#   terminationGracePeriodSeconds: 30
#   tolerations:
#   - effect: NoExecute
#     key: node.kubernetes.io/not-ready
#     operator: Exists
#     tolerationSeconds: 30
#   - effect: NoExecute
#     key: node.kubernetes.io/unreachable
#     operator: Exists
#     tolerationSeconds: 30
#   volumes:
#   - emptyDir: {}
#     name: tekton-internal-workspace
#   - emptyDir: {}
#     name: tekton-internal-home
#   - emptyDir: {}
#     name: tekton-internal-results
#   - emptyDir: {}
#     name: tekton-internal-steps
#   - emptyDir: {}
#     name: tekton-internal-scripts
#   - emptyDir: {}
#     name: tekton-internal-bin
#   - downwardAPI:
#       defaultMode: 420
#       items:
#       - fieldRef:
#           apiVersion: v1
#           fieldPath: metadata.annotations['tekton.dev/ready']
#         path: ready
#     name: tekton-internal-downward
#   - emptyDir:
#       medium: Memory
#     name: tekton-creds-init-home-0
#   - emptyDir: {}
#     name: tekton-internal-run-0
#   - emptyDir:
#       medium: Memory
#     name: tekton-creds-init-home-1
#   - emptyDir: {}
#     name: tekton-internal-run-1
#   - name: kube-api-access-6r8vx
#     projected:
#       defaultMode: 420
#       sources:
#       - serviceAccountToken:
#           expirationSeconds: 3607
#           path: token
#       - configMap:
#           items:
#           - key: ca.crt
#             path: ca.crt
#           name: kube-root-ca.crt
#       - downwardAPI:
#           items:
#           - fieldRef:
#               apiVersion: v1
#               fieldPath: metadata.namespace
#             path: namespace

# $ kubectl logs home-is-set-ql9fx-pod -c step-unnamed-0
# + pwd
# /

# + env
# KUBERNETES_SERVICE_PORT_HTTPS=443
# KUBERNETES_SERVICE_PORT=443
# HOSTNAME=home-is-set-ql9fx-pod
# PWD=/
# HOME=/root
# KUBERNETES_PORT_443_TCP=tcp://10.4.0.1:443
# SHLVL=1
# KUBERNETES_PORT_443_TCP_PROTO=tcp
# KUBERNETES_PORT_443_TCP_ADDR=10.4.0.1
# KUBERNETES_SERVICE_HOST=10.4.0.1
# KUBERNETES_PORT=tcp://10.4.0.1:443
# KUBERNETES_PORT_443_TCP_PORT=443
# PATH=/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin
# _=/usr/bin/env

# + apt-get update
# Get:1 http://security.ubuntu.com/ubuntu noble-security InRelease [89.7 kB]
# Get:2 http://archive.ubuntu.com/ubuntu noble InRelease [256 kB]
# Get:3 http://security.ubuntu.com/ubuntu noble-security/universe amd64 Packages [11.8 kB]
# Get:4 http://security.ubuntu.com/ubuntu noble-security/main amd64 Packages [31.0 kB]
# Get:5 http://archive.ubuntu.com/ubuntu noble-updates InRelease [89.7 kB]
# Get:6 http://archive.ubuntu.com/ubuntu noble-backports InRelease [89.7 kB]
# Get:7 http://archive.ubuntu.com/ubuntu noble/universe amd64 Packages [19.3 MB]
# Get:8 http://archive.ubuntu.com/ubuntu noble/multiverse amd64 Packages [331 kB]
# Get:9 http://archive.ubuntu.com/ubuntu noble/main amd64 Packages [1808 kB]
# Get:10 http://archive.ubuntu.com/ubuntu noble/restricted amd64 Packages [117 kB]
# Get:11 http://archive.ubuntu.com/ubuntu noble-updates/main amd64 Packages [33.0 kB]
# Get:12 http://archive.ubuntu.com/ubuntu noble-updates/universe amd64 Packages [20.1 kB]
# Get:13 http://archive.ubuntu.com/ubuntu noble-backports/universe amd64 Packages [4224 B]
# Fetched 22.2 MB in 1min 14s (299 kB/s)
# Reading package lists...

# + apt-get install -y tree
# Reading package lists...
# Building dependency tree...
# Reading state information...
# The following NEW packages will be installed:
#   tree
# 0 upgraded, 1 newly installed, 0 to remove and 0 not upgraded.
# Need to get 47.1 kB of archives.
# After this operation, 111 kB of additional disk space will be used.
# Get:1 http://archive.ubuntu.com/ubuntu noble/universe amd64 tree amd64 2.1.1-2ubuntu3 [47.1 kB]
# debconf: delaying package configuration, since apt-utils is not installed
# Fetched 47.1 kB in 1s (43.8 kB/s)
# Selecting previously unselected package tree.
# (Reading database ... 4368 files and directories currently installed.)
# Preparing to unpack .../tree_2.1.1-2ubuntu3_amd64.deb ...
# Unpacking tree (2.1.1-2ubuntu3) ...
# Setting up tree (2.1.1-2ubuntu3) ...

# + tree -a /tekton
# /tekton
# |-- bin
# |   `-- entrypoint
# |-- creds
# |-- downward
# |   |-- ..2024_05_13_09_09_36.36275673
# |   |   `-- ready
# |   |-- ..data -> ..2024_05_13_09_09_36.36275673
# |   `-- ready -> ..data/ready
# |-- home
# |-- results
# |-- run
# |   |-- 0
# |   |   `-- status
# |   |       `-- results
# |   `-- 1
# |       `-- status
# |           `-- results
# |-- scripts
# |   |-- script-0-zmtcz
# |   `-- script-1-6d5kt
# |-- steps
# |   |-- 0 -> /tekton/run/0/status
# |   |-- 1 -> /tekton/run/1/status
# |   |-- step-unnamed-0 -> /tekton/run/0/status
# |   `-- step-unnamed-1 -> /tekton/run/1/status
# `-- termination

# 21 directories, 6 files

# + tree -a /workspace
# /workspace

# 0 directories, 0 files

# $ kubectl logs home-is-set-ql9fx-pod -c step-unnamed-1
# + pwd
# /

# + env
# KUBERNETES_SERVICE_PORT_HTTPS=443
# KUBERNETES_SERVICE_PORT=443
# HOSTNAME=home-is-set-ql9fx-pod
# PWD=/
# HOME=/tekton/home
# KUBERNETES_PORT_443_TCP=tcp://10.4.0.1:443
# SHLVL=1
# KUBERNETES_PORT_443_TCP_PROTO=tcp
# KUBERNETES_PORT_443_TCP_ADDR=10.4.0.1
# KUBERNETES_SERVICE_HOST=10.4.0.1
# KUBERNETES_PORT=tcp://10.4.0.1:443
# KUBERNETES_PORT_443_TCP_PORT=443
# PATH=/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin
# _=/usr/bin/env

# + [[ /tekton/home == /tekton/home ]]
# $

