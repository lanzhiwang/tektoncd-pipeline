apiVersion: tekton.dev/v1
kind: TaskRun
metadata:
  generateName: custom-volume-
spec:
  taskSpec:
    steps:
      - name: write
        image: ubuntu
        script: |
          #!/usr/bin/env bash
          echo some stuff > /im/a/custom/mount/path/file
        volumeMounts:
          - name: custom
            mountPath: /im/a/custom/mount/path
      - name: read
        image: ubuntu
        script: |
          #!/usr/bin/env bash
          cat /short/and/stout/file | grep stuff
        volumeMounts:
          - name: custom
            mountPath: /short/and/stout
    volumes:
      - name: custom
        emptyDir: {}
# ---
# apiVersion: v1
# kind: Pod
# metadata:
#   annotations:
#     pipeline.tekton.dev/release: d714545
#     tekton.dev/ready: READY
#   creationTimestamp: "2024-04-30T03:14:42Z"
#   labels:
#     app.kubernetes.io/managed-by: tekton-pipelines
#     tekton.dev/taskRun: custom-volume-67xc4
#   name: custom-volume-67xc4-pod
#   namespace: default
#   ownerReferences:
#   - apiVersion: tekton.dev/v1
#     blockOwnerDeletion: true
#     controller: true
#     kind: TaskRun
#     name: custom-volume-67xc4
#     uid: 074308da-d0f2-40d4-87a0-73b018b2b001
#   resourceVersion: "436761"
#   uid: 55c5aa91-41a4-42ce-9ff8-e436696be945
# spec:
#   activeDeadlineSeconds: 5400
#   containers:
#   - args:
#     - -wait_file
#     - /tekton/downward/ready
#     - -wait_file_content
#     - -post_file
#     - /tekton/run/0/out
#     - -termination_path
#     - /tekton/termination
#     - -step_metadata_dir
#     - /tekton/run/0/status
#     - -entrypoint
#     - /tekton/scripts/script-0-sfzz8
#     - --
#     command:
#     - /tekton/bin/entrypoint
#     image: ubuntu
#     imagePullPolicy: Always
#     name: step-write
#     resources: {}
#     terminationMessagePath: /tekton/termination
#     terminationMessagePolicy: File
#     volumeMounts:
#     - mountPath: /im/a/custom/mount/path
#       name: custom
#     - mountPath: /tekton/scripts
#       name: tekton-internal-scripts
#       readOnly: true
#     - mountPath: /tekton/downward
#       name: tekton-internal-downward
#       readOnly: true
#     - mountPath: /tekton/creds
#       name: tekton-creds-init-home-0
#     - mountPath: /tekton/run/0
#       name: tekton-internal-run-0
#     - mountPath: /tekton/run/1
#       name: tekton-internal-run-1
#       readOnly: true
#     - mountPath: /tekton/bin
#       name: tekton-internal-bin
#       readOnly: true
#     - mountPath: /workspace
#       name: tekton-internal-workspace
#     - mountPath: /tekton/home
#       name: tekton-internal-home
#     - mountPath: /tekton/results
#       name: tekton-internal-results
#     - mountPath: /tekton/steps
#       name: tekton-internal-steps
#       readOnly: true
#     - mountPath: /var/run/secrets/kubernetes.io/serviceaccount
#       name: kube-api-access-wvzsn
#       readOnly: true
#   - args:
#     - -wait_file
#     - /tekton/run/0/out
#     - -post_file
#     - /tekton/run/1/out
#     - -termination_path
#     - /tekton/termination
#     - -step_metadata_dir
#     - /tekton/run/1/status
#     - -entrypoint
#     - /tekton/scripts/script-1-p4r4f
#     - --
#     command:
#     - /tekton/bin/entrypoint
#     image: ubuntu
#     imagePullPolicy: Always
#     name: step-read
#     resources: {}
#     terminationMessagePath: /tekton/termination
#     terminationMessagePolicy: File
#     volumeMounts:
#     - mountPath: /short/and/stout
#       name: custom
#     - mountPath: /tekton/scripts
#       name: tekton-internal-scripts
#       readOnly: true
#     - mountPath: /tekton/creds
#       name: tekton-creds-init-home-1
#     - mountPath: /tekton/run/0
#       name: tekton-internal-run-0
#       readOnly: true
#     - mountPath: /tekton/run/1
#       name: tekton-internal-run-1
#     - mountPath: /tekton/bin
#       name: tekton-internal-bin
#       readOnly: true
#     - mountPath: /workspace
#       name: tekton-internal-workspace
#     - mountPath: /tekton/home
#       name: tekton-internal-home
#     - mountPath: /tekton/results
#       name: tekton-internal-results
#     - mountPath: /tekton/steps
#       name: tekton-internal-steps
#       readOnly: true
#     - mountPath: /var/run/secrets/kubernetes.io/serviceaccount
#       name: kube-api-access-wvzsn
#       readOnly: true
#   dnsPolicy: ClusterFirst
#   enableServiceLinks: true
#   initContainers:
#   - command:
#     - /ko-app/entrypoint
#     - init
#     - /ko-app/entrypoint
#     - /tekton/bin/entrypoint
#     - step-write
#     - step-read
#     image: ghcr.io/lanzhiwang/tekton-releases/tektoncd/pipeline/cmd/entrypoint:v0.57.0
#     imagePullPolicy: IfNotPresent
#     name: prepare
#     resources: {}
#     terminationMessagePath: /dev/termination-log
#     terminationMessagePolicy: File
#     volumeMounts:
#     - mountPath: /tekton/bin
#       name: tekton-internal-bin
#     - mountPath: /tekton/steps
#       name: tekton-internal-steps
#     - mountPath: /var/run/secrets/kubernetes.io/serviceaccount
#       name: kube-api-access-wvzsn
#       readOnly: true
#     workingDir: /
#   - args:
#     - -c
#     - |
#       scriptfile="/tekton/scripts/script-0-sfzz8"
#       touch ${scriptfile} && chmod +x ${scriptfile}
#       cat > ${scriptfile} << '_EOF_'
#       IyEvdXNyL2Jpbi9lbnYgYmFzaAplY2hvIHNvbWUgc3R1ZmYgPiAvaW0vYS9jdXN0b20vbW91bnQvcGF0aC9maWxlCg==
#       _EOF_
#       /tekton/bin/entrypoint decode-script "${scriptfile}"
#       scriptfile="/tekton/scripts/script-1-p4r4f"
#       touch ${scriptfile} && chmod +x ${scriptfile}
#       cat > ${scriptfile} << '_EOF_'
#       IyEvdXNyL2Jpbi9lbnYgYmFzaApjYXQgL3Nob3J0L2FuZC9zdG91dC9maWxlIHwgZ3JlcCBzdHVmZgo=
#       _EOF_
#       /tekton/bin/entrypoint decode-script "${scriptfile}"
#     command:
#     - sh
#     image: ghcr.io/lanzhiwang/chainguard/busybox:v1.0.0
#     imagePullPolicy: IfNotPresent
#     name: place-scripts
#     resources: {}
#     terminationMessagePath: /dev/termination-log
#     terminationMessagePolicy: File
#     volumeMounts:
#     - mountPath: /tekton/scripts
#       name: tekton-internal-scripts
#     - mountPath: /tekton/bin
#       name: tekton-internal-bin
#     - mountPath: /var/run/secrets/kubernetes.io/serviceaccount
#       name: kube-api-access-wvzsn
#       readOnly: true
#   nodeName: 192.168.137.27
#   preemptionPolicy: PreemptLowerPriority
#   priority: 0
#   restartPolicy: Never
#   schedulerName: default-scheduler
#   securityContext: {}
#   serviceAccount: default
#   serviceAccountName: default
#   terminationGracePeriodSeconds: 30
#   tolerations:
#   - effect: NoExecute
#     key: node.kubernetes.io/not-ready
#     operator: Exists
#     tolerationSeconds: 30
#   - effect: NoExecute
#     key: node.kubernetes.io/unreachable
#     operator: Exists
#     tolerationSeconds: 30
#   volumes:
#   - emptyDir: {}
#     name: tekton-internal-workspace
#   - emptyDir: {}
#     name: tekton-internal-home
#   - emptyDir: {}
#     name: tekton-internal-results
#   - emptyDir: {}
#     name: tekton-internal-steps
#   - emptyDir: {}
#     name: tekton-internal-scripts
#   - emptyDir: {}
#     name: tekton-internal-bin
#   - downwardAPI:
#       defaultMode: 420
#       items:
#       - fieldRef:
#           apiVersion: v1
#           fieldPath: metadata.annotations['tekton.dev/ready']
#         path: ready
#     name: tekton-internal-downward
#   - emptyDir:
#       medium: Memory
#     name: tekton-creds-init-home-0
#   - emptyDir: {}
#     name: tekton-internal-run-0
#   - emptyDir:
#       medium: Memory
#     name: tekton-creds-init-home-1
#   - emptyDir: {}
#     name: tekton-internal-run-1
#   - emptyDir: {}
#     name: custom
#   - name: kube-api-access-wvzsn
#     projected:
#       defaultMode: 420
#       sources:
#       - serviceAccountToken:
#           expirationSeconds: 3607
#           path: token
#       - configMap:
#           items:
#           - key: ca.crt
#             path: ca.crt
#           name: kube-root-ca.crt
#       - downwardAPI:
#           items:
#           - fieldRef:
#               apiVersion: v1
#               fieldPath: metadata.namespace
#             path: namespace
# status:
#   conditions:
#   - lastProbeTime: null
#     lastTransitionTime: "2024-04-30T03:14:46Z"
#     reason: PodCompleted
#     status: "True"
#     type: Initialized
#   - lastProbeTime: null
#     lastTransitionTime: "2024-04-30T03:14:53Z"
#     reason: PodCompleted
#     status: "False"
#     type: Ready
#   - lastProbeTime: null
#     lastTransitionTime: "2024-04-30T03:14:53Z"
#     reason: PodCompleted
#     status: "False"
#     type: ContainersReady
#   - lastProbeTime: null
#     lastTransitionTime: "2024-04-30T03:14:42Z"
#     status: "True"
#     type: PodScheduled
#   containerStatuses:
#   - containerID: containerd://7d60712b15b0e53b6d9080760198b68081e609a594d2e196fd724910fece781b
#     image: docker.io/library/ubuntu:latest
#     imageID: docker.io/library/ubuntu@sha256:562456a05a0dbd62a671c1854868862a4687bf979a96d48ae8e766642cd911e8
#     lastState: {}
#     name: step-read
#     ready: false
#     restartCount: 0
#     started: false
#     state:
#       terminated:
#         containerID: containerd://7d60712b15b0e53b6d9080760198b68081e609a594d2e196fd724910fece781b
#         exitCode: 0
#         finishedAt: "2024-04-30T03:14:53Z"
#         message: '[{"key":"StartedAt","value":"2024-04-30T03:14:53.058Z","type":3}]'
#         reason: Completed
#         startedAt: "2024-04-30T03:14:51Z"
#   - containerID: containerd://bfd96adc71df3db50bf2e42d42f5a1d43e424dc6cd949da2140e63cc2fe47793
#     image: docker.io/library/ubuntu:latest
#     imageID: docker.io/library/ubuntu@sha256:562456a05a0dbd62a671c1854868862a4687bf979a96d48ae8e766642cd911e8
#     lastState: {}
#     name: step-write
#     ready: false
#     restartCount: 0
#     started: false
#     state:
#       terminated:
#         containerID: containerd://bfd96adc71df3db50bf2e42d42f5a1d43e424dc6cd949da2140e63cc2fe47793
#         exitCode: 0
#         finishedAt: "2024-04-30T03:14:52Z"
#         message: '[{"key":"StartedAt","value":"2024-04-30T03:14:52.638Z","type":3}]'
#         reason: Completed
#         startedAt: "2024-04-30T03:14:48Z"
#   hostIP: 192.168.137.27
#   initContainerStatuses:
#   - containerID: containerd://d7555dea029f6c2db3c941add072b23e2da55f82210d2c09a2e206ffe0bb738b
#     image: ghcr.io/lanzhiwang/tekton-releases/tektoncd/pipeline/cmd/entrypoint:v0.57.0
#     imageID: ghcr.io/lanzhiwang/tekton-releases/tektoncd/pipeline/cmd/entrypoint@sha256:2aedd9b42d8ba49bf88de4bb6e789088ce3f6ac34cd8303dad18c2608e8f4008
#     lastState: {}
#     name: prepare
#     ready: true
#     restartCount: 0
#     state:
#       terminated:
#         containerID: containerd://d7555dea029f6c2db3c941add072b23e2da55f82210d2c09a2e206ffe0bb738b
#         exitCode: 0
#         finishedAt: "2024-04-30T03:14:43Z"
#         reason: Completed
#         startedAt: "2024-04-30T03:14:43Z"
#   - containerID: containerd://e7eab148954e48dacdd2b256586fc53065e566ddd60aa9d2c0c22fdd272a61f3
#     image: ghcr.io/lanzhiwang/chainguard/busybox:v1.0.0
#     imageID: ghcr.io/lanzhiwang/chainguard/busybox@sha256:48604a9f16721131879bbbbb05f28df84f82d3a83ff11fe523a293f485cd3591
#     lastState: {}
#     name: place-scripts
#     ready: true
#     restartCount: 0
#     state:
#       terminated:
#         containerID: containerd://e7eab148954e48dacdd2b256586fc53065e566ddd60aa9d2c0c22fdd272a61f3
#         exitCode: 0
#         finishedAt: "2024-04-30T03:14:45Z"
#         reason: Completed
#         startedAt: "2024-04-30T03:14:45Z"
#   phase: Succeeded
#   podIP: 10.3.0.108
#   podIPs:
#   - ip: 10.3.0.108
#   qosClass: BestEffort
#   startTime: "2024-04-30T03:14:42Z"
