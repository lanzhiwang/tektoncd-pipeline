apiVersion: tekton.dev/v1
kind: TaskRun
metadata:
  generateName: array-with-default-
spec:
  params:
    - name: array-to-echo
      value:
        - "foo"
        - "bar"
  taskSpec:
    params:
      - name: array-to-echo
        type: array
      - name: another-array-to-echo
        type: array
        default:
          - "foo-default"
          - "bar-default"
      - name: string-to-echo
        type: string
        default: "baz"
    steps:
      # this step should echo "foo bar foo-default bar-default baz"
      - name: echo-params
        image: bash:3.2
        args:
          [
            "echo",
            "$(params.array-to-echo[*])",
            "$(params.another-array-to-echo[*])",
            "$(params.string-to-echo)",
          ]
# ---
# apiVersion: v1
# kind: Pod
# metadata:
#   annotations:
#     pipeline.tekton.dev/release: d714545
#     tekton.dev/ready: READY
#   labels:
#     app.kubernetes.io/managed-by: tekton-pipelines
#     tekton.dev/taskRun: array-with-default-6cqdg
#   name: array-with-default-6cqdg-pod
#   namespace: default
#   ownerReferences:
#     - apiVersion: tekton.dev/v1
#       blockOwnerDeletion: true
#       controller: true
#       kind: TaskRun
#       name: array-with-default-6cqdg
#       uid: f88a11ee-fd2f-4c49-8b6d-8101e6c5fa5f
# spec:
#   activeDeadlineSeconds: 5400
#   containers:
#     - args:
#         - -wait_file
#         - /tekton/downward/ready
#         - -wait_file_content
#         - -post_file
#         - /tekton/run/0/out
#         - -termination_path
#         - /tekton/termination
#         - -step_metadata_dir
#         - /tekton/run/0/status
#         - --
#         - echo
#         - foo
#         - bar
#         - foo-default
#         - bar-default
#         - baz
#       command:
#         - /tekton/bin/entrypoint
#       env:
#         - name: TEKTON_PLATFORM_COMMANDS
#           value: '{"linux/386":["docker-entrypoint.sh"],"linux/amd64":["docker-entrypoint.sh"],"linux/arm/v6":["docker-entrypoint.sh"],"linux/arm/v7":["docker-entrypoint.sh"],"linux/arm64/v8":["docker-entrypoint.sh"],"linux/ppc64le":["docker-entrypoint.sh"],"linux/s390x":["docker-entrypoint.sh"]}'
#           # {
#           #     "linux/386": [
#           #         "docker-entrypoint.sh"
#           #     ],
#           #     "linux/amd64": [
#           #         "docker-entrypoint.sh"
#           #     ],
#           #     "linux/arm/v6": [
#           #         "docker-entrypoint.sh"
#           #     ],
#           #     "linux/arm/v7": [
#           #         "docker-entrypoint.sh"
#           #     ],
#           #     "linux/arm64/v8": [
#           #         "docker-entrypoint.sh"
#           #     ],
#           #     "linux/ppc64le": [
#           #         "docker-entrypoint.sh"
#           #     ],
#           #     "linux/s390x": [
#           #         "docker-entrypoint.sh"
#           #     ]
#           # }
#       image: index.docker.io/library/bash@sha256:b89a5501ba42e3acac66dc43632b97378fba5f3b2bb4ec542021f4454a2d7959
#       imagePullPolicy: IfNotPresent
#       name: step-echo-params
#       resources: {}
#       terminationMessagePath: /tekton/termination
#       terminationMessagePolicy: File
#       volumeMounts:
#         - mountPath: /tekton/downward
#           name: tekton-internal-downward
#           readOnly: true
#         - mountPath: /tekton/creds
#           name: tekton-creds-init-home-0
#         - mountPath: /tekton/run/0
#           name: tekton-internal-run-0
#         - mountPath: /tekton/bin
#           name: tekton-internal-bin
#           readOnly: true
#         - mountPath: /workspace
#           name: tekton-internal-workspace
#         - mountPath: /tekton/home
#           name: tekton-internal-home
#         - mountPath: /tekton/results
#           name: tekton-internal-results
#         - mountPath: /tekton/steps
#           name: tekton-internal-steps
#           readOnly: true
#         - mountPath: /var/run/secrets/kubernetes.io/serviceaccount
#           name: kube-api-access-7brgr
#           readOnly: true
#   dnsPolicy: ClusterFirst
#   enableServiceLinks: true
#   initContainers:
#     - command:
#         - /ko-app/entrypoint
#         - init
#         - /ko-app/entrypoint
#         - /tekton/bin/entrypoint
#         - step-echo-params
#       image: ghcr.io/lanzhiwang/tekton-releases/tektoncd/pipeline/cmd/entrypoint:v0.57.0
#       imagePullPolicy: IfNotPresent
#       name: prepare
#       resources: {}
#       terminationMessagePath: /dev/termination-log
#       terminationMessagePolicy: File
#       volumeMounts:
#         - mountPath: /tekton/bin
#           name: tekton-internal-bin
#         - mountPath: /tekton/steps
#           name: tekton-internal-steps
#         - mountPath: /var/run/secrets/kubernetes.io/serviceaccount
#           name: kube-api-access-7brgr
#           readOnly: true
#       workingDir: /
#   nodeName: 192.168.137.27
#   preemptionPolicy: PreemptLowerPriority
#   priority: 0
#   restartPolicy: Never
#   schedulerName: default-scheduler
#   securityContext: {}
#   serviceAccount: default
#   serviceAccountName: default
#   terminationGracePeriodSeconds: 30
#   tolerations:
#     - effect: NoExecute
#       key: node.kubernetes.io/not-ready
#       operator: Exists
#       tolerationSeconds: 30
#     - effect: NoExecute
#       key: node.kubernetes.io/unreachable
#       operator: Exists
#       tolerationSeconds: 30
#   volumes:
#     - emptyDir: {}
#       name: tekton-internal-workspace
#     - emptyDir: {}
#       name: tekton-internal-home
#     - emptyDir: {}
#       name: tekton-internal-results
#     - emptyDir: {}
#       name: tekton-internal-steps
#     - emptyDir: {}
#       name: tekton-internal-bin
#     - downwardAPI:
#         defaultMode: 420
#         items:
#           - fieldRef:
#               apiVersion: v1
#               fieldPath: metadata.annotations['tekton.dev/ready']
#             path: ready
#       name: tekton-internal-downward
#     - emptyDir:
#         medium: Memory
#       name: tekton-creds-init-home-0
#     - emptyDir: {}
#       name: tekton-internal-run-0
#     - name: kube-api-access-7brgr
#       projected:
#         defaultMode: 420
#         sources:
#           - serviceAccountToken:
#               expirationSeconds: 3607
#               path: token
#           - configMap:
#               items:
#                 - key: ca.crt
#                   path: ca.crt
#               name: kube-root-ca.crt
#           - downwardAPI:
#               items:
#                 - fieldRef:
#                     apiVersion: v1
#                     fieldPath: metadata.namespace
#                   path: namespace

# ---
# $ kubectl logs array-with-default-6cqdg-pod
# Defaulted container "step-echo-params" out of: step-echo-params, prepare (init)
# foo bar foo-default bar-default baz
