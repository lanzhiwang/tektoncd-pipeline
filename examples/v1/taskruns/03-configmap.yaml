apiVersion: v1
kind: ConfigMap
metadata:
  name: config-for-testing-configmaps
data:
  test.data: tasks are my jam
---
apiVersion: tekton.dev/v1
kind: TaskRun
metadata:
  generateName: configmap-
spec:
  taskSpec:
    steps:
      - name: secret
        image: ubuntu
        script: |
          #!/usr/bin/env bash
          [[ $(cat /config/test.data) == $TEST_DATA ]]
        env:
          - name: TEST_DATA
            valueFrom:
              configMapKeyRef:
                name: config-for-testing-configmaps
                key: test.data
        volumeMounts:
          - name: config-volume
            mountPath: /config
    volumes:
      - name: config-volume
        configMap:
          name: config-for-testing-configmaps
# ---
# apiVersion: v1
# kind: Pod
# metadata:
#   annotations:
#     pipeline.tekton.dev/release: d714545
#     tekton.dev/ready: READY
#   creationTimestamp: "2024-04-30T03:00:17Z"
#   labels:
#     app.kubernetes.io/managed-by: tekton-pipelines
#     tekton.dev/taskRun: configmap-m6wgj
#   name: configmap-m6wgj-pod
#   namespace: default
#   ownerReferences:
#     - apiVersion: tekton.dev/v1
#       blockOwnerDeletion: true
#       controller: true
#       kind: TaskRun
#       name: configmap-m6wgj
#       uid: 67b0c550-9f33-4b38-94e3-6aaa1b18c150
#   resourceVersion: "430012"
#   uid: 9fd87b28-e6b1-4a7c-baf5-6d8e50d7983a
# spec:
#   activeDeadlineSeconds: 5400
#   containers:
#     - args:
#         - -wait_file
#         - /tekton/downward/ready
#         - -wait_file_content
#         - -post_file
#         - /tekton/run/0/out
#         - -termination_path
#         - /tekton/termination
#         - -step_metadata_dir
#         - /tekton/run/0/status
#         - -entrypoint
#         - /tekton/scripts/script-0-26fm5
#         - --
#       command:
#         - /tekton/bin/entrypoint
#       env:
#         - name: TEST_DATA
#           valueFrom:
#             configMapKeyRef:
#               key: test.data
#               name: config-for-testing-configmaps
#       image: ubuntu
#       imagePullPolicy: Always
#       name: step-secret
#       resources: {}
#       terminationMessagePath: /tekton/termination
#       terminationMessagePolicy: File
#       volumeMounts:
#         - mountPath: /config
#           name: config-volume
#         - mountPath: /tekton/scripts
#           name: tekton-internal-scripts
#           readOnly: true
#         - mountPath: /tekton/downward
#           name: tekton-internal-downward
#           readOnly: true
#         - mountPath: /tekton/creds
#           name: tekton-creds-init-home-0
#         - mountPath: /tekton/run/0
#           name: tekton-internal-run-0
#         - mountPath: /tekton/bin
#           name: tekton-internal-bin
#           readOnly: true
#         - mountPath: /workspace
#           name: tekton-internal-workspace
#         - mountPath: /tekton/home
#           name: tekton-internal-home
#         - mountPath: /tekton/results
#           name: tekton-internal-results
#         - mountPath: /tekton/steps
#           name: tekton-internal-steps
#           readOnly: true
#         - mountPath: /var/run/secrets/kubernetes.io/serviceaccount
#           name: kube-api-access-bg2cv
#           readOnly: true
#   dnsPolicy: ClusterFirst
#   enableServiceLinks: true
#   initContainers:
#     - command:
#         - /ko-app/entrypoint
#         - init
#         - /ko-app/entrypoint
#         - /tekton/bin/entrypoint
#         - step-secret
#       image: ghcr.io/lanzhiwang/tekton-releases/tektoncd/pipeline/cmd/entrypoint:v0.57.0
#       imagePullPolicy: IfNotPresent
#       name: prepare
#       resources: {}
#       terminationMessagePath: /dev/termination-log
#       terminationMessagePolicy: File
#       volumeMounts:
#         - mountPath: /tekton/bin
#           name: tekton-internal-bin
#         - mountPath: /tekton/steps
#           name: tekton-internal-steps
#         - mountPath: /var/run/secrets/kubernetes.io/serviceaccount
#           name: kube-api-access-bg2cv
#           readOnly: true
#       workingDir: /
#     - args:
#         - -c
#         - |
#           scriptfile="/tekton/scripts/script-0-26fm5"
#           touch ${scriptfile} && chmod +x ${scriptfile}
#           cat > ${scriptfile} << '_EOF_'
#           IyEvdXNyL2Jpbi9lbnYgYmFzaApbWyAkKGNhdCAvY29uZmlnL3Rlc3QuZGF0YSkgPT0gJFRFU1RfREFUQSBdXQo=
#           _EOF_
#           /tekton/bin/entrypoint decode-script "${scriptfile}"
#       command:
#         - sh
#       image: ghcr.io/lanzhiwang/chainguard/busybox:v1.0.0
#       imagePullPolicy: IfNotPresent
#       name: place-scripts
#       resources: {}
#       terminationMessagePath: /dev/termination-log
#       terminationMessagePolicy: File
#       volumeMounts:
#         - mountPath: /tekton/scripts
#           name: tekton-internal-scripts
#         - mountPath: /tekton/bin
#           name: tekton-internal-bin
#         - mountPath: /var/run/secrets/kubernetes.io/serviceaccount
#           name: kube-api-access-bg2cv
#           readOnly: true
#   nodeName: 192.168.137.27
#   preemptionPolicy: PreemptLowerPriority
#   priority: 0
#   restartPolicy: Never
#   schedulerName: default-scheduler
#   securityContext: {}
#   serviceAccount: default
#   serviceAccountName: default
#   terminationGracePeriodSeconds: 30
#   tolerations:
#     - effect: NoExecute
#       key: node.kubernetes.io/not-ready
#       operator: Exists
#       tolerationSeconds: 30
#     - effect: NoExecute
#       key: node.kubernetes.io/unreachable
#       operator: Exists
#       tolerationSeconds: 30
#   volumes:
#     - emptyDir: {}
#       name: tekton-internal-workspace
#     - emptyDir: {}
#       name: tekton-internal-home
#     - emptyDir: {}
#       name: tekton-internal-results
#     - emptyDir: {}
#       name: tekton-internal-steps
#     - emptyDir: {}
#       name: tekton-internal-scripts
#     - emptyDir: {}
#       name: tekton-internal-bin
#     - downwardAPI:
#         defaultMode: 420
#         items:
#           - fieldRef:
#               apiVersion: v1
#               fieldPath: metadata.annotations['tekton.dev/ready']
#             path: ready
#       name: tekton-internal-downward
#     - emptyDir:
#         medium: Memory
#       name: tekton-creds-init-home-0
#     - emptyDir: {}
#       name: tekton-internal-run-0
#     - configMap:
#         defaultMode: 420
#         name: config-for-testing-configmaps
#       name: config-volume
#     - name: kube-api-access-bg2cv
#       projected:
#         defaultMode: 420
#         sources:
#           - serviceAccountToken:
#               expirationSeconds: 3607
#               path: token
#           - configMap:
#               items:
#                 - key: ca.crt
#                   path: ca.crt
#               name: kube-root-ca.crt
#           - downwardAPI:
#               items:
#                 - fieldRef:
#                     apiVersion: v1
#                     fieldPath: metadata.namespace
#                   path: namespace
# status:
#   conditions:
#     - lastProbeTime: null
#       lastTransitionTime: "2024-04-30T03:00:20Z"
#       reason: PodCompleted
#       status: "True"
#       type: Initialized
#     - lastProbeTime: null
#       lastTransitionTime: "2024-04-30T03:00:37Z"
#       reason: PodCompleted
#       status: "False"
#       type: Ready
#     - lastProbeTime: null
#       lastTransitionTime: "2024-04-30T03:00:37Z"
#       reason: PodCompleted
#       status: "False"
#       type: ContainersReady
#     - lastProbeTime: null
#       lastTransitionTime: "2024-04-30T03:00:17Z"
#       status: "True"
#       type: PodScheduled
#   containerStatuses:
#     - containerID: containerd://372e425ab25e869e6c807a03e0ebe5d1c3afbd907390a87469d158eee24c2d36
#       image: docker.io/library/ubuntu:latest
#       imageID: docker.io/library/ubuntu@sha256:562456a05a0dbd62a671c1854868862a4687bf979a96d48ae8e766642cd911e8
#       lastState: {}
#       name: step-secret
#       ready: false
#       restartCount: 0
#       started: false
#       state:
#         terminated:
#           containerID: containerd://372e425ab25e869e6c807a03e0ebe5d1c3afbd907390a87469d158eee24c2d36
#           exitCode: 0
#           finishedAt: "2024-04-30T03:00:37Z"
#           message: '[{"key":"StartedAt","value":"2024-04-30T03:00:37.290Z","type":3}]'
#           reason: Completed
#           startedAt: "2024-04-30T03:00:35Z"
#   hostIP: 192.168.137.27
#   initContainerStatuses:
#     - containerID: containerd://6b18e0c2fcc6e82a65033c753eeffb28f639168bf69999cd8cd83464f9de25b7
#       image: ghcr.io/lanzhiwang/tekton-releases/tektoncd/pipeline/cmd/entrypoint:v0.57.0
#       imageID: ghcr.io/lanzhiwang/tekton-releases/tektoncd/pipeline/cmd/entrypoint@sha256:2aedd9b42d8ba49bf88de4bb6e789088ce3f6ac34cd8303dad18c2608e8f4008
#       lastState: {}
#       name: prepare
#       ready: true
#       restartCount: 0
#       state:
#         terminated:
#           containerID: containerd://6b18e0c2fcc6e82a65033c753eeffb28f639168bf69999cd8cd83464f9de25b7
#           exitCode: 0
#           finishedAt: "2024-04-30T03:00:18Z"
#           reason: Completed
#           startedAt: "2024-04-30T03:00:18Z"
#     - containerID: containerd://62af4e4f0b983e44b44dce7c30feb38452c623086f800cb5dc46a4001e739c32
#       image: ghcr.io/lanzhiwang/chainguard/busybox:v1.0.0
#       imageID: ghcr.io/lanzhiwang/chainguard/busybox@sha256:48604a9f16721131879bbbbb05f28df84f82d3a83ff11fe523a293f485cd3591
#       lastState: {}
#       name: place-scripts
#       ready: true
#       restartCount: 0
#       state:
#         terminated:
#           containerID: containerd://62af4e4f0b983e44b44dce7c30feb38452c623086f800cb5dc46a4001e739c32
#           exitCode: 0
#           finishedAt: "2024-04-30T03:00:20Z"
#           reason: Completed
#           startedAt: "2024-04-30T03:00:20Z"
#   phase: Succeeded
#   podIP: 10.3.0.106
#   podIPs:
#     - ip: 10.3.0.106
#   qosClass: BestEffort
#   startTime: "2024-04-30T03:00:17Z"
