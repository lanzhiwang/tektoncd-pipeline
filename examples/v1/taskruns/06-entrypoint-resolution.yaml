apiVersion: tekton.dev/v1
kind: TaskRun
metadata:
  name: entrypoint-resolution
spec:
  taskSpec:
    steps:
      # Multi-arch image with no command defined. We should look up the command
      # for each platform-specific image and pass it to the Pod, which selects
      # the right command at runtime based on the node's runtime platform.
      - image: ghcr.io/lanzhiwang/tekton-releases/tektoncd/pipeline/cmd/nop:v0.57.0
        name: step1
        # /tekton/bin/entrypoint \
        # -wait_file /tekton/downward/ready -wait_file_content \
        # -post_file /tekton/run/0/out \
        # -termination_path /tekton/termination \
        # -step_metadata_dir /tekton/run/0/status --

      # Multi-arch image with no command defined, but with args. We'll look
      # up the commands and pass it to the entrypoint binary via env var, then
      # append the specified args.
      - image: ubuntu
        args: ["-c", "echo", "hello"]
        name: step2
        # /tekton/bin/entrypoint \
        # -wait_file /tekton/run/0/out \
        # -post_file /tekton/run/1/out \
        # -termination_path /tekton/termination \
        # -step_metadata_dir /tekton/run/1/status \
        # -- -c echo hello

      # Multi-arch image, but since we specify `script` we don't need to look it
      # up and pass it down.
      - image: ubuntu
        script: echo hello
        name: step3
        # /tekton/bin/entrypoint \
        # -wait_file /tekton/run/1/out \
        # -post_file /tekton/run/2/out \
        # -termination_path /tekton/termination \
        # -step_metadata_dir /tekton/run/2/status \
        # -entrypoint /tekton/scripts/script-2-56t5v --

      # Multi-arch image, but since we specify `command` and `args` we don't
      # need to look it up and pass it down.
      - image: ubuntu
        command: ["sh", "-c"]
        args: ["echo hello"]
        name: step4
        # /tekton/bin/entrypoint \
        # -wait_file /tekton/run/2/out \
        # -post_file /tekton/run/3/out \
        # -termination_path /tekton/termination \
        # -step_metadata_dir /tekton/run/3/status \
        # -entrypoint sh -- -c echo hello

      # Single-platform image with no command defined. We should look up the one
      # and only command value and pass it to the Pod.
      - image: amd64/ubuntu
        name: step5
        # /tekton/bin/entrypoint \
        # -wait_file /tekton/run/3/out \
        # -post_file /tekton/run/4/out \
        # -termination_path /tekton/termination \
        # -step_metadata_dir /tekton/run/4/status \
        # --

      # Single-platform image with no command defined, but with args. We'll look
      # up the one command and pass it to the entrypoint binary, then append the
      # specified args.
      - image: amd64/ubuntu
        args: ["-c", "echo", "hello"]
        name: step6
        # /tekton/bin/entrypoint \
        # -wait_file /tekton/run/4/out \
        # -post_file /tekton/run/5/out \
        # -termination_path /tekton/termination \
        # -step_metadata_dir /tekton/run/5/status \
        # -- -c echo hello

      # Single-platform image, but since we specify `script` we don't need to
      # look it up and pass it down.
      - image: amd64/ubuntu
        script: echo hello
        name: step7
        # /tekton/bin/entrypoint \
        # -wait_file /tekton/run/5/out \
        # -post_file /tekton/run/6/out \
        # -termination_path /tekton/termination \
        # -step_metadata_dir /tekton/run/6/status \
        # -entrypoint /tekton/scripts/script-6-g7qtr --

      # Single-platform image, but since we specify `command` and `args` we
      # don't need to look it up and pass it down.
      - image: amd64/ubuntu
        command: ["sh", "-c"]
        args: ["echo hello"]
        name: step8
        # /tekton/bin/entrypoint \
        # -wait_file /tekton/run/6/out \
        # -post_file /tekton/run/7/out \
        # -termination_path /tekton/termination \
        # -step_metadata_dir /tekton/run/7/status \
        # -entrypoint sh -- -c echo hello

# ---
# apiVersion: v1
# kind: Pod
# metadata:
#   annotations:
#     kubectl.kubernetes.io/last-applied-configuration: |
#       {"apiVersion":"tekton.dev/v1","kind":"TaskRun","metadata":{"annotations":{},"name":"entrypoint-resolution","namespace":"default"},"spec":{"taskSpec":{"steps":[{"image":"ghcr.io/lanzhiwang/tekton-releases/tektoncd/pipeline/cmd/nop:v0.57.0","name":"step1"},{"args":["-c","echo","hello"],"image":"ubuntu","name":"step2"},{"image":"ubuntu","name":"step3","script":"echo hello"},{"args":["echo hello"],"command":["sh","-c"],"image":"ubuntu","name":"step4"},{"image":"amd64/ubuntu","name":"step5"},{"args":["-c","echo","hello"],"image":"amd64/ubuntu","name":"step6"},{"image":"amd64/ubuntu","name":"step7","script":"echo hello"},{"args":["echo hello"],"command":["sh","-c"],"image":"amd64/ubuntu","name":"step8"}]}}}
#     pipeline.tekton.dev/release: d714545
#     tekton.dev/ready: READY
#   creationTimestamp: "2024-04-30T07:48:11Z"
#   labels:
#     app.kubernetes.io/managed-by: tekton-pipelines
#     tekton.dev/taskRun: entrypoint-resolution
#   name: entrypoint-resolution-pod
#   namespace: default
#   ownerReferences:
#     - apiVersion: tekton.dev/v1
#       blockOwnerDeletion: true
#       controller: true
#       kind: TaskRun
#       name: entrypoint-resolution
#       uid: 04b75375-45e2-400b-a618-bade730a75a9
#   resourceVersion: "564932"
#   uid: f3a6efe8-c9b6-4356-a8a6-c964056e505e
# spec:
#   activeDeadlineSeconds: 5400
#   containers:
#     - args:
#         - -wait_file
#         - /tekton/downward/ready
#         - -wait_file_content
#         - -post_file
#         - /tekton/run/0/out
#         - -termination_path
#         - /tekton/termination
#         - -step_metadata_dir
#         - /tekton/run/0/status
#         - --
#       command:
#         - /tekton/bin/entrypoint
#       env:
#         - name: TEKTON_PLATFORM_COMMANDS
#           value: '{"linux/amd64":["/ko-app/nop"]}'
#       image: ghcr.io/lanzhiwang/tekton-releases/tektoncd/pipeline/cmd/nop@sha256:fe85d59dc0a89d5a40f834f840e42490feb9237ccd968a91bce122ee7ba67fed
#       imagePullPolicy: IfNotPresent
#       name: step-step1
#       resources: {}
#       terminationMessagePath: /tekton/termination
#       terminationMessagePolicy: File
#       volumeMounts:
#         - mountPath: /tekton/downward
#           name: tekton-internal-downward
#           readOnly: true
#         - mountPath: /tekton/creds
#           name: tekton-creds-init-home-0
#         - mountPath: /tekton/run/0
#           name: tekton-internal-run-0
#         - mountPath: /tekton/run/1
#           name: tekton-internal-run-1
#           readOnly: true
#         - mountPath: /tekton/run/2
#           name: tekton-internal-run-2
#           readOnly: true
#         - mountPath: /tekton/run/3
#           name: tekton-internal-run-3
#           readOnly: true
#         - mountPath: /tekton/run/4
#           name: tekton-internal-run-4
#           readOnly: true
#         - mountPath: /tekton/run/5
#           name: tekton-internal-run-5
#           readOnly: true
#         - mountPath: /tekton/run/6
#           name: tekton-internal-run-6
#           readOnly: true
#         - mountPath: /tekton/run/7
#           name: tekton-internal-run-7
#           readOnly: true
#         - mountPath: /tekton/bin
#           name: tekton-internal-bin
#           readOnly: true
#         - mountPath: /workspace
#           name: tekton-internal-workspace
#         - mountPath: /tekton/home
#           name: tekton-internal-home
#         - mountPath: /tekton/results
#           name: tekton-internal-results
#         - mountPath: /tekton/steps
#           name: tekton-internal-steps
#           readOnly: true
#         - mountPath: /var/run/secrets/kubernetes.io/serviceaccount
#           name: kube-api-access-s7v4f
#           readOnly: true
#     - args:
#         - -wait_file
#         - /tekton/run/0/out
#         - -post_file
#         - /tekton/run/1/out
#         - -termination_path
#         - /tekton/termination
#         - -step_metadata_dir
#         - /tekton/run/1/status
#         - --
#         - -c
#         - echo
#         - hello
#       command:
#         - /tekton/bin/entrypoint
#       env:
#         - name: TEKTON_PLATFORM_COMMANDS
#           value: '{"linux/amd64":["/bin/bash"],"linux/arm/v7":["/bin/bash"],"linux/arm64/v8":["/bin/bash"],"linux/ppc64le":["/bin/bash"],"linux/s390x":["/bin/bash"]}'
#       image: index.docker.io/library/ubuntu@sha256:562456a05a0dbd62a671c1854868862a4687bf979a96d48ae8e766642cd911e8
#       imagePullPolicy: IfNotPresent
#       name: step-step2
#       resources: {}
#       terminationMessagePath: /tekton/termination
#       terminationMessagePolicy: File
#       volumeMounts:
#         - mountPath: /tekton/creds
#           name: tekton-creds-init-home-1
#         - mountPath: /tekton/run/0
#           name: tekton-internal-run-0
#           readOnly: true
#         - mountPath: /tekton/run/1
#           name: tekton-internal-run-1
#         - mountPath: /tekton/run/2
#           name: tekton-internal-run-2
#           readOnly: true
#         - mountPath: /tekton/run/3
#           name: tekton-internal-run-3
#           readOnly: true
#         - mountPath: /tekton/run/4
#           name: tekton-internal-run-4
#           readOnly: true
#         - mountPath: /tekton/run/5
#           name: tekton-internal-run-5
#           readOnly: true
#         - mountPath: /tekton/run/6
#           name: tekton-internal-run-6
#           readOnly: true
#         - mountPath: /tekton/run/7
#           name: tekton-internal-run-7
#           readOnly: true
#         - mountPath: /tekton/bin
#           name: tekton-internal-bin
#           readOnly: true
#         - mountPath: /workspace
#           name: tekton-internal-workspace
#         - mountPath: /tekton/home
#           name: tekton-internal-home
#         - mountPath: /tekton/results
#           name: tekton-internal-results
#         - mountPath: /tekton/steps
#           name: tekton-internal-steps
#           readOnly: true
#         - mountPath: /var/run/secrets/kubernetes.io/serviceaccount
#           name: kube-api-access-s7v4f
#           readOnly: true
#     - args:
#         - -wait_file
#         - /tekton/run/1/out
#         - -post_file
#         - /tekton/run/2/out
#         - -termination_path
#         - /tekton/termination
#         - -step_metadata_dir
#         - /tekton/run/2/status
#         - -entrypoint
#         - /tekton/scripts/script-2-56t5v
#         - --
#       command:
#         - /tekton/bin/entrypoint
#       image: ubuntu
#       imagePullPolicy: Always
#       name: step-step3
#       resources: {}
#       terminationMessagePath: /tekton/termination
#       terminationMessagePolicy: File
#       volumeMounts:
#         - mountPath: /tekton/scripts
#           name: tekton-internal-scripts
#           readOnly: true
#         - mountPath: /tekton/creds
#           name: tekton-creds-init-home-2
#         - mountPath: /tekton/run/0
#           name: tekton-internal-run-0
#           readOnly: true
#         - mountPath: /tekton/run/1
#           name: tekton-internal-run-1
#           readOnly: true
#         - mountPath: /tekton/run/2
#           name: tekton-internal-run-2
#         - mountPath: /tekton/run/3
#           name: tekton-internal-run-3
#           readOnly: true
#         - mountPath: /tekton/run/4
#           name: tekton-internal-run-4
#           readOnly: true
#         - mountPath: /tekton/run/5
#           name: tekton-internal-run-5
#           readOnly: true
#         - mountPath: /tekton/run/6
#           name: tekton-internal-run-6
#           readOnly: true
#         - mountPath: /tekton/run/7
#           name: tekton-internal-run-7
#           readOnly: true
#         - mountPath: /tekton/bin
#           name: tekton-internal-bin
#           readOnly: true
#         - mountPath: /workspace
#           name: tekton-internal-workspace
#         - mountPath: /tekton/home
#           name: tekton-internal-home
#         - mountPath: /tekton/results
#           name: tekton-internal-results
#         - mountPath: /tekton/steps
#           name: tekton-internal-steps
#           readOnly: true
#         - mountPath: /var/run/secrets/kubernetes.io/serviceaccount
#           name: kube-api-access-s7v4f
#           readOnly: true
#     - args:
#         - -wait_file
#         - /tekton/run/2/out
#         - -post_file
#         - /tekton/run/3/out
#         - -termination_path
#         - /tekton/termination
#         - -step_metadata_dir
#         - /tekton/run/3/status
#         - -entrypoint
#         - sh
#         - --
#         - -c
#         - echo hello
#       command:
#         - /tekton/bin/entrypoint
#       image: ubuntu
#       imagePullPolicy: Always
#       name: step-step4
#       resources: {}
#       terminationMessagePath: /tekton/termination
#       terminationMessagePolicy: File
#       volumeMounts:
#         - mountPath: /tekton/creds
#           name: tekton-creds-init-home-3
#         - mountPath: /tekton/run/0
#           name: tekton-internal-run-0
#           readOnly: true
#         - mountPath: /tekton/run/1
#           name: tekton-internal-run-1
#           readOnly: true
#         - mountPath: /tekton/run/2
#           name: tekton-internal-run-2
#           readOnly: true
#         - mountPath: /tekton/run/3
#           name: tekton-internal-run-3
#         - mountPath: /tekton/run/4
#           name: tekton-internal-run-4
#           readOnly: true
#         - mountPath: /tekton/run/5
#           name: tekton-internal-run-5
#           readOnly: true
#         - mountPath: /tekton/run/6
#           name: tekton-internal-run-6
#           readOnly: true
#         - mountPath: /tekton/run/7
#           name: tekton-internal-run-7
#           readOnly: true
#         - mountPath: /tekton/bin
#           name: tekton-internal-bin
#           readOnly: true
#         - mountPath: /workspace
#           name: tekton-internal-workspace
#         - mountPath: /tekton/home
#           name: tekton-internal-home
#         - mountPath: /tekton/results
#           name: tekton-internal-results
#         - mountPath: /tekton/steps
#           name: tekton-internal-steps
#           readOnly: true
#         - mountPath: /var/run/secrets/kubernetes.io/serviceaccount
#           name: kube-api-access-s7v4f
#           readOnly: true
#     - args:
#         - -wait_file
#         - /tekton/run/3/out
#         - -post_file
#         - /tekton/run/4/out
#         - -termination_path
#         - /tekton/termination
#         - -step_metadata_dir
#         - /tekton/run/4/status
#         - --
#       command:
#         - /tekton/bin/entrypoint
#       env:
#         - name: TEKTON_PLATFORM_COMMANDS
#           value: '{"linux/amd64":["/bin/bash"]}'
#       image: index.docker.io/amd64/ubuntu@sha256:28a2b328825ac02db5c29d9356bfba80ba6c4b6ebfcac5a91a4656fa3453775a
#       imagePullPolicy: IfNotPresent
#       name: step-step5
#       resources: {}
#       terminationMessagePath: /tekton/termination
#       terminationMessagePolicy: File
#       volumeMounts:
#         - mountPath: /tekton/creds
#           name: tekton-creds-init-home-4
#         - mountPath: /tekton/run/0
#           name: tekton-internal-run-0
#           readOnly: true
#         - mountPath: /tekton/run/1
#           name: tekton-internal-run-1
#           readOnly: true
#         - mountPath: /tekton/run/2
#           name: tekton-internal-run-2
#           readOnly: true
#         - mountPath: /tekton/run/3
#           name: tekton-internal-run-3
#           readOnly: true
#         - mountPath: /tekton/run/4
#           name: tekton-internal-run-4
#         - mountPath: /tekton/run/5
#           name: tekton-internal-run-5
#           readOnly: true
#         - mountPath: /tekton/run/6
#           name: tekton-internal-run-6
#           readOnly: true
#         - mountPath: /tekton/run/7
#           name: tekton-internal-run-7
#           readOnly: true
#         - mountPath: /tekton/bin
#           name: tekton-internal-bin
#           readOnly: true
#         - mountPath: /workspace
#           name: tekton-internal-workspace
#         - mountPath: /tekton/home
#           name: tekton-internal-home
#         - mountPath: /tekton/results
#           name: tekton-internal-results
#         - mountPath: /tekton/steps
#           name: tekton-internal-steps
#           readOnly: true
#         - mountPath: /var/run/secrets/kubernetes.io/serviceaccount
#           name: kube-api-access-s7v4f
#           readOnly: true
#     - args:
#         - -wait_file
#         - /tekton/run/4/out
#         - -post_file
#         - /tekton/run/5/out
#         - -termination_path
#         - /tekton/termination
#         - -step_metadata_dir
#         - /tekton/run/5/status
#         - --
#         - -c
#         - echo
#         - hello
#       command:
#         - /tekton/bin/entrypoint
#       env:
#         - name: TEKTON_PLATFORM_COMMANDS
#           value: '{"linux/amd64":["/bin/bash"]}'
#       image: index.docker.io/amd64/ubuntu@sha256:28a2b328825ac02db5c29d9356bfba80ba6c4b6ebfcac5a91a4656fa3453775a
#       imagePullPolicy: IfNotPresent
#       name: step-step6
#       resources: {}
#       terminationMessagePath: /tekton/termination
#       terminationMessagePolicy: File
#       volumeMounts:
#         - mountPath: /tekton/creds
#           name: tekton-creds-init-home-5
#         - mountPath: /tekton/run/0
#           name: tekton-internal-run-0
#           readOnly: true
#         - mountPath: /tekton/run/1
#           name: tekton-internal-run-1
#           readOnly: true
#         - mountPath: /tekton/run/2
#           name: tekton-internal-run-2
#           readOnly: true
#         - mountPath: /tekton/run/3
#           name: tekton-internal-run-3
#           readOnly: true
#         - mountPath: /tekton/run/4
#           name: tekton-internal-run-4
#           readOnly: true
#         - mountPath: /tekton/run/5
#           name: tekton-internal-run-5
#         - mountPath: /tekton/run/6
#           name: tekton-internal-run-6
#           readOnly: true
#         - mountPath: /tekton/run/7
#           name: tekton-internal-run-7
#           readOnly: true
#         - mountPath: /tekton/bin
#           name: tekton-internal-bin
#           readOnly: true
#         - mountPath: /workspace
#           name: tekton-internal-workspace
#         - mountPath: /tekton/home
#           name: tekton-internal-home
#         - mountPath: /tekton/results
#           name: tekton-internal-results
#         - mountPath: /tekton/steps
#           name: tekton-internal-steps
#           readOnly: true
#         - mountPath: /var/run/secrets/kubernetes.io/serviceaccount
#           name: kube-api-access-s7v4f
#           readOnly: true
#     - args:
#         - -wait_file
#         - /tekton/run/5/out
#         - -post_file
#         - /tekton/run/6/out
#         - -termination_path
#         - /tekton/termination
#         - -step_metadata_dir
#         - /tekton/run/6/status
#         - -entrypoint
#         - /tekton/scripts/script-6-g7qtr
#         - --
#       command:
#         - /tekton/bin/entrypoint
#       image: amd64/ubuntu
#       imagePullPolicy: Always
#       name: step-step7
#       resources: {}
#       terminationMessagePath: /tekton/termination
#       terminationMessagePolicy: File
#       volumeMounts:
#         - mountPath: /tekton/scripts
#           name: tekton-internal-scripts
#           readOnly: true
#         - mountPath: /tekton/creds
#           name: tekton-creds-init-home-6
#         - mountPath: /tekton/run/0
#           name: tekton-internal-run-0
#           readOnly: true
#         - mountPath: /tekton/run/1
#           name: tekton-internal-run-1
#           readOnly: true
#         - mountPath: /tekton/run/2
#           name: tekton-internal-run-2
#           readOnly: true
#         - mountPath: /tekton/run/3
#           name: tekton-internal-run-3
#           readOnly: true
#         - mountPath: /tekton/run/4
#           name: tekton-internal-run-4
#           readOnly: true
#         - mountPath: /tekton/run/5
#           name: tekton-internal-run-5
#           readOnly: true
#         - mountPath: /tekton/run/6
#           name: tekton-internal-run-6
#         - mountPath: /tekton/run/7
#           name: tekton-internal-run-7
#           readOnly: true
#         - mountPath: /tekton/bin
#           name: tekton-internal-bin
#           readOnly: true
#         - mountPath: /workspace
#           name: tekton-internal-workspace
#         - mountPath: /tekton/home
#           name: tekton-internal-home
#         - mountPath: /tekton/results
#           name: tekton-internal-results
#         - mountPath: /tekton/steps
#           name: tekton-internal-steps
#           readOnly: true
#         - mountPath: /var/run/secrets/kubernetes.io/serviceaccount
#           name: kube-api-access-s7v4f
#           readOnly: true
#     - args:
#         - -wait_file
#         - /tekton/run/6/out
#         - -post_file
#         - /tekton/run/7/out
#         - -termination_path
#         - /tekton/termination
#         - -step_metadata_dir
#         - /tekton/run/7/status
#         - -entrypoint
#         - sh
#         - --
#         - -c
#         - echo hello
#       command:
#         - /tekton/bin/entrypoint
#       image: amd64/ubuntu
#       imagePullPolicy: Always
#       name: step-step8
#       resources: {}
#       terminationMessagePath: /tekton/termination
#       terminationMessagePolicy: File
#       volumeMounts:
#         - mountPath: /tekton/creds
#           name: tekton-creds-init-home-7
#         - mountPath: /tekton/run/0
#           name: tekton-internal-run-0
#           readOnly: true
#         - mountPath: /tekton/run/1
#           name: tekton-internal-run-1
#           readOnly: true
#         - mountPath: /tekton/run/2
#           name: tekton-internal-run-2
#           readOnly: true
#         - mountPath: /tekton/run/3
#           name: tekton-internal-run-3
#           readOnly: true
#         - mountPath: /tekton/run/4
#           name: tekton-internal-run-4
#           readOnly: true
#         - mountPath: /tekton/run/5
#           name: tekton-internal-run-5
#           readOnly: true
#         - mountPath: /tekton/run/6
#           name: tekton-internal-run-6
#           readOnly: true
#         - mountPath: /tekton/run/7
#           name: tekton-internal-run-7
#         - mountPath: /tekton/bin
#           name: tekton-internal-bin
#           readOnly: true
#         - mountPath: /workspace
#           name: tekton-internal-workspace
#         - mountPath: /tekton/home
#           name: tekton-internal-home
#         - mountPath: /tekton/results
#           name: tekton-internal-results
#         - mountPath: /tekton/steps
#           name: tekton-internal-steps
#           readOnly: true
#         - mountPath: /var/run/secrets/kubernetes.io/serviceaccount
#           name: kube-api-access-s7v4f
#           readOnly: true
#   dnsPolicy: ClusterFirst
#   enableServiceLinks: true
#   initContainers:
#     - command:
#         - /ko-app/entrypoint
#         - init
#         - /ko-app/entrypoint
#         - /tekton/bin/entrypoint
#         - step-step1
#         - step-step2
#         - step-step3
#         - step-step4
#         - step-step5
#         - step-step6
#         - step-step7
#         - step-step8
#       image: ghcr.io/lanzhiwang/tekton-releases/tektoncd/pipeline/cmd/entrypoint:v0.57.0
#       imagePullPolicy: IfNotPresent
#       name: prepare
#       resources: {}
#       terminationMessagePath: /dev/termination-log
#       terminationMessagePolicy: File
#       volumeMounts:
#         - mountPath: /tekton/bin
#           name: tekton-internal-bin
#         - mountPath: /tekton/steps
#           name: tekton-internal-steps
#         - mountPath: /var/run/secrets/kubernetes.io/serviceaccount
#           name: kube-api-access-s7v4f
#           readOnly: true
#       workingDir: /
#     - args:
#         - -c
#         - |
#           scriptfile="/tekton/scripts/script-2-56t5v"
#           touch ${scriptfile} && chmod +x ${scriptfile}
#           cat > ${scriptfile} << '_EOF_'
#           IyEvYmluL3NoCnNldCAtZQplY2hvIGhlbGxv
#           _EOF_
#           /tekton/bin/entrypoint decode-script "${scriptfile}"
#           scriptfile="/tekton/scripts/script-6-g7qtr"
#           touch ${scriptfile} && chmod +x ${scriptfile}
#           cat > ${scriptfile} << '_EOF_'
#           IyEvYmluL3NoCnNldCAtZQplY2hvIGhlbGxv
#           _EOF_
#           /tekton/bin/entrypoint decode-script "${scriptfile}"
#       command:
#         - sh
#       image: ghcr.io/lanzhiwang/chainguard/busybox:v1.0.0
#       imagePullPolicy: IfNotPresent
#       name: place-scripts
#       resources: {}
#       terminationMessagePath: /dev/termination-log
#       terminationMessagePolicy: File
#       volumeMounts:
#         - mountPath: /tekton/scripts
#           name: tekton-internal-scripts
#         - mountPath: /tekton/bin
#           name: tekton-internal-bin
#         - mountPath: /var/run/secrets/kubernetes.io/serviceaccount
#           name: kube-api-access-s7v4f
#           readOnly: true
#   nodeName: 192.168.137.27
#   preemptionPolicy: PreemptLowerPriority
#   priority: 0
#   restartPolicy: Never
#   schedulerName: default-scheduler
#   securityContext: {}
#   serviceAccount: default
#   serviceAccountName: default
#   terminationGracePeriodSeconds: 30
#   tolerations:
#     - effect: NoExecute
#       key: node.kubernetes.io/not-ready
#       operator: Exists
#       tolerationSeconds: 30
#     - effect: NoExecute
#       key: node.kubernetes.io/unreachable
#       operator: Exists
#       tolerationSeconds: 30
#   volumes:
#     - emptyDir: {}
#       name: tekton-internal-workspace
#     - emptyDir: {}
#       name: tekton-internal-home
#     - emptyDir: {}
#       name: tekton-internal-results
#     - emptyDir: {}
#       name: tekton-internal-steps
#     - emptyDir: {}
#       name: tekton-internal-scripts
#     - emptyDir: {}
#       name: tekton-internal-bin
#     - downwardAPI:
#         defaultMode: 420
#         items:
#           - fieldRef:
#               apiVersion: v1
#               fieldPath: metadata.annotations['tekton.dev/ready']
#             path: ready
#       name: tekton-internal-downward
#     - emptyDir:
#         medium: Memory
#       name: tekton-creds-init-home-0
#     - emptyDir: {}
#       name: tekton-internal-run-0
#     - emptyDir:
#         medium: Memory
#       name: tekton-creds-init-home-1
#     - emptyDir: {}
#       name: tekton-internal-run-1
#     - emptyDir:
#         medium: Memory
#       name: tekton-creds-init-home-2
#     - emptyDir: {}
#       name: tekton-internal-run-2
#     - emptyDir:
#         medium: Memory
#       name: tekton-creds-init-home-3
#     - emptyDir: {}
#       name: tekton-internal-run-3
#     - emptyDir:
#         medium: Memory
#       name: tekton-creds-init-home-4
#     - emptyDir: {}
#       name: tekton-internal-run-4
#     - emptyDir:
#         medium: Memory
#       name: tekton-creds-init-home-5
#     - emptyDir: {}
#       name: tekton-internal-run-5
#     - emptyDir:
#         medium: Memory
#       name: tekton-creds-init-home-6
#     - emptyDir: {}
#       name: tekton-internal-run-6
#     - emptyDir:
#         medium: Memory
#       name: tekton-creds-init-home-7
#     - emptyDir: {}
#       name: tekton-internal-run-7
#     - name: kube-api-access-s7v4f
#       projected:
#         defaultMode: 420
#         sources:
#           - serviceAccountToken:
#               expirationSeconds: 3607
#               path: token
#           - configMap:
#               items:
#                 - key: ca.crt
#                   path: ca.crt
#               name: kube-root-ca.crt
#           - downwardAPI:
#               items:
#                 - fieldRef:
#                     apiVersion: v1
#                     fieldPath: metadata.namespace
#                   path: namespace
# status:
#   conditions:
#     - lastProbeTime: null
#       lastTransitionTime: "2024-04-30T07:48:15Z"
#       reason: PodCompleted
#       status: "True"
#       type: Initialized
#     - lastProbeTime: null
#       lastTransitionTime: "2024-04-30T07:48:30Z"
#       reason: PodCompleted
#       status: "False"
#       type: Ready
#     - lastProbeTime: null
#       lastTransitionTime: "2024-04-30T07:48:30Z"
#       reason: PodCompleted
#       status: "False"
#       type: ContainersReady
#     - lastProbeTime: null
#       lastTransitionTime: "2024-04-30T07:48:11Z"
#       status: "True"
#       type: PodScheduled
#   containerStatuses:
#     - containerID: containerd://ac07e7eaf1bb6d199a6f5faa481e1c237f75fdc4807628f5473b9368ce8aef58
#       image: sha256:5674c7ead3064cc1e24517e1f26a68f98482933acd113ee44b6d458078c5c802
#       imageID: ghcr.io/lanzhiwang/tekton-releases/tektoncd/pipeline/cmd/nop@sha256:fe85d59dc0a89d5a40f834f840e42490feb9237ccd968a91bce122ee7ba67fed
#       lastState: {}
#       name: step-step1
#       ready: false
#       restartCount: 0
#       started: false
#       state:
#         terminated:
#           containerID: containerd://ac07e7eaf1bb6d199a6f5faa481e1c237f75fdc4807628f5473b9368ce8aef58
#           exitCode: 0
#           finishedAt: "2024-04-30T07:48:29Z"
#           message: '[{"key":"StartedAt","value":"2024-04-30T07:48:29.848Z","type":3}]'
#           reason: Completed
#           startedAt: "2024-04-30T07:48:15Z"
#     - containerID: containerd://3ee64551b61caf71b4145c95dec232fab8af7e70b4d8e074f54188650f85317c
#       image: docker.io/amd64/ubuntu:latest
#       imageID: docker.io/amd64/ubuntu@sha256:28a2b328825ac02db5c29d9356bfba80ba6c4b6ebfcac5a91a4656fa3453775a
#       lastState: {}
#       name: step-step2
#       ready: false
#       restartCount: 0
#       started: false
#       state:
#         terminated:
#           containerID: containerd://3ee64551b61caf71b4145c95dec232fab8af7e70b4d8e074f54188650f85317c
#           exitCode: 0
#           finishedAt: "2024-04-30T07:48:30Z"
#           message: '[{"key":"StartedAt","value":"2024-04-30T07:48:30.084Z","type":3}]'
#           reason: Completed
#           startedAt: "2024-04-30T07:48:16Z"
#     - containerID: containerd://38b764498640139c74f7577564f2950e8e5b1a90e188b657947f5b07d16f813b
#       image: docker.io/amd64/ubuntu:latest
#       imageID: docker.io/amd64/ubuntu@sha256:28a2b328825ac02db5c29d9356bfba80ba6c4b6ebfcac5a91a4656fa3453775a
#       lastState: {}
#       name: step-step3
#       ready: false
#       restartCount: 0
#       started: false
#       state:
#         terminated:
#           containerID: containerd://38b764498640139c74f7577564f2950e8e5b1a90e188b657947f5b07d16f813b
#           exitCode: 0
#           finishedAt: "2024-04-30T07:48:30Z"
#           message: '[{"key":"StartedAt","value":"2024-04-30T07:48:30.786Z","type":3}]'
#           reason: Completed
#           startedAt: "2024-04-30T07:48:18Z"
#     - containerID: containerd://d358ae0a4691b595fadc41c2644bd1468d744e0609ee14a62be1c2d6958cd06e
#       image: docker.io/amd64/ubuntu:latest
#       imageID: docker.io/amd64/ubuntu@sha256:28a2b328825ac02db5c29d9356bfba80ba6c4b6ebfcac5a91a4656fa3453775a
#       lastState: {}
#       name: step-step4
#       ready: false
#       restartCount: 0
#       started: false
#       state:
#         terminated:
#           containerID: containerd://d358ae0a4691b595fadc41c2644bd1468d744e0609ee14a62be1c2d6958cd06e
#           exitCode: 0
#           finishedAt: "2024-04-30T07:48:31Z"
#           message: '[{"key":"StartedAt","value":"2024-04-30T07:48:31.537Z","type":3}]'
#           reason: Completed
#           startedAt: "2024-04-30T07:48:21Z"
#     - containerID: containerd://a122a824ea53419dcecab11fbaca9fd8535ba3ab7b2bb52c1f7fd7ca9aec438e
#       image: docker.io/amd64/ubuntu:latest
#       imageID: docker.io/amd64/ubuntu@sha256:28a2b328825ac02db5c29d9356bfba80ba6c4b6ebfcac5a91a4656fa3453775a
#       lastState: {}
#       name: step-step5
#       ready: false
#       restartCount: 0
#       started: false
#       state:
#         terminated:
#           containerID: containerd://a122a824ea53419dcecab11fbaca9fd8535ba3ab7b2bb52c1f7fd7ca9aec438e
#           exitCode: 0
#           finishedAt: "2024-04-30T07:48:31Z"
#           message: '[{"key":"StartedAt","value":"2024-04-30T07:48:31.761Z","type":3}]'
#           reason: Completed
#           startedAt: "2024-04-30T07:48:21Z"
#     - containerID: containerd://d2624987150db80a9c8909f9d00167f937370a6596ed5e21c7819512171115f7
#       image: docker.io/amd64/ubuntu:latest
#       imageID: docker.io/amd64/ubuntu@sha256:28a2b328825ac02db5c29d9356bfba80ba6c4b6ebfcac5a91a4656fa3453775a
#       lastState: {}
#       name: step-step6
#       ready: false
#       restartCount: 0
#       started: false
#       state:
#         terminated:
#           containerID: containerd://d2624987150db80a9c8909f9d00167f937370a6596ed5e21c7819512171115f7
#           exitCode: 0
#           finishedAt: "2024-04-30T07:48:31Z"
#           message: '[{"key":"StartedAt","value":"2024-04-30T07:48:31.957Z","type":3}]'
#           reason: Completed
#           startedAt: "2024-04-30T07:48:21Z"
#     - containerID: containerd://39871553fb1516080248e75a56cd63341a7115c86248ca0b4c36c69a6a29883f
#       image: docker.io/amd64/ubuntu:latest
#       imageID: docker.io/amd64/ubuntu@sha256:28a2b328825ac02db5c29d9356bfba80ba6c4b6ebfcac5a91a4656fa3453775a
#       lastState: {}
#       name: step-step7
#       ready: false
#       restartCount: 0
#       started: false
#       state:
#         terminated:
#           containerID: containerd://39871553fb1516080248e75a56cd63341a7115c86248ca0b4c36c69a6a29883f
#           exitCode: 0
#           finishedAt: "2024-04-30T07:48:32Z"
#           message: '[{"key":"StartedAt","value":"2024-04-30T07:48:32.956Z","type":3}]'
#           reason: Completed
#           startedAt: "2024-04-30T07:48:24Z"
#     - containerID: containerd://318d8fa4dcd53c0136b053847617eeb3132ba0991b0601374ade7a8d55dfc3b6
#       image: docker.io/amd64/ubuntu:latest
#       imageID: docker.io/amd64/ubuntu@sha256:28a2b328825ac02db5c29d9356bfba80ba6c4b6ebfcac5a91a4656fa3453775a
#       lastState: {}
#       name: step-step8
#       ready: false
#       restartCount: 0
#       started: false
#       state:
#         terminated:
#           containerID: containerd://318d8fa4dcd53c0136b053847617eeb3132ba0991b0601374ade7a8d55dfc3b6
#           exitCode: 0
#           finishedAt: "2024-04-30T07:48:33Z"
#           message: '[{"key":"StartedAt","value":"2024-04-30T07:48:33.752Z","type":3}]'
#           reason: Completed
#           startedAt: "2024-04-30T07:48:27Z"
#   hostIP: 192.168.137.27
#   initContainerStatuses:
#     - containerID: containerd://e5025b2866cb9e1de82e5079aec17df21ca2ab87864bffbd81bbfcc1d5b681bc
#       image: ghcr.io/lanzhiwang/tekton-releases/tektoncd/pipeline/cmd/entrypoint:v0.57.0
#       imageID: ghcr.io/lanzhiwang/tekton-releases/tektoncd/pipeline/cmd/entrypoint@sha256:2aedd9b42d8ba49bf88de4bb6e789088ce3f6ac34cd8303dad18c2608e8f4008
#       lastState: {}
#       name: prepare
#       ready: true
#       restartCount: 0
#       state:
#         terminated:
#           containerID: containerd://e5025b2866cb9e1de82e5079aec17df21ca2ab87864bffbd81bbfcc1d5b681bc
#           exitCode: 0
#           finishedAt: "2024-04-30T07:48:13Z"
#           reason: Completed
#           startedAt: "2024-04-30T07:48:12Z"
#     - containerID: containerd://6a98ef047c788010bca17a6b3a7dc18140a72c54aad3fb852a5ac43bc0a71761
#       image: ghcr.io/lanzhiwang/chainguard/busybox:v1.0.0
#       imageID: ghcr.io/lanzhiwang/chainguard/busybox@sha256:48604a9f16721131879bbbbb05f28df84f82d3a83ff11fe523a293f485cd3591
#       lastState: {}
#       name: place-scripts
#       ready: true
#       restartCount: 0
#       state:
#         terminated:
#           containerID: containerd://6a98ef047c788010bca17a6b3a7dc18140a72c54aad3fb852a5ac43bc0a71761
#           exitCode: 0
#           finishedAt: "2024-04-30T07:48:14Z"
#           reason: Completed
#           startedAt: "2024-04-30T07:48:14Z"
#   phase: Succeeded
#   podIP: 10.3.0.120
#   podIPs:
#     - ip: 10.3.0.120
#   qosClass: BestEffort
#   startTime: "2024-04-30T07:48:11Z"
