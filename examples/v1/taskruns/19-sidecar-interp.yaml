apiVersion: tekton.dev/v1
kind: TaskRun
metadata:
  generateName: sidecar-interp-
spec:
  taskSpec:
    params:
      - name: some-input
        default: foo
    volumes:
      - name: shared
        emptyDir: {}
    sidecars:
      - name: value-sidecar
        image: ubuntu:22.04
        command:
          - /bin/bash
        args:
          - -c
          - "echo $(params.some-input) > /shared/value && sleep infinity"
        volumeMounts:
          - name: shared
            mountPath: /shared
    steps:
      - name: check-value
        image: ubuntu:22.04
        script: |
          #!/bin/bash
          set -x
          VALUE=$(cat /shared/value)
          [[ $VALUE == 'foo' ]]
        volumeMounts:
          - name: shared
            mountPath: /shared
# ---
# apiVersion: v1
# kind: Pod
# metadata:
#   annotations:
#     pipeline.tekton.dev/release: d714545
#     tekton.dev/ready: READY
#   creationTimestamp: "2024-04-30T09:35:40Z"
#   labels:
#     app.kubernetes.io/managed-by: tekton-pipelines
#     tekton.dev/taskRun: sidecar-interp-5frc9
#   name: sidecar-interp-5frc9-pod
#   namespace: default
#   ownerReferences:
#     - apiVersion: tekton.dev/v1
#       blockOwnerDeletion: true
#       controller: true
#       kind: TaskRun
#       name: sidecar-interp-5frc9
#       uid: ec5ea571-0e47-44ef-ac63-06bee6b1ed86
#   resourceVersion: "615825"
#   uid: 8dd80bf3-4042-42bc-8922-eb3122917ac8
# spec:
#   activeDeadlineSeconds: 5400
#   containers:
#     - args:
#         - -wait_file
#         - /tekton/downward/ready
#         - -wait_file_content
#         - -post_file
#         - /tekton/run/0/out
#         - -termination_path
#         - /tekton/termination
#         - -step_metadata_dir
#         - /tekton/run/0/status
#         - -entrypoint
#         - /tekton/scripts/script-0-29bnn
#         - --
#       command:
#         - /tekton/bin/entrypoint
#       image: ubuntu:22.04
#       imagePullPolicy: IfNotPresent
#       name: step-check-value
#       resources: {}
#       terminationMessagePath: /tekton/termination
#       terminationMessagePolicy: File
#       volumeMounts:
#         - mountPath: /shared
#           name: shared
#         - mountPath: /tekton/scripts
#           name: tekton-internal-scripts
#           readOnly: true
#         - mountPath: /tekton/downward
#           name: tekton-internal-downward
#           readOnly: true
#         - mountPath: /tekton/creds
#           name: tekton-creds-init-home-0
#         - mountPath: /tekton/run/0
#           name: tekton-internal-run-0
#         - mountPath: /tekton/bin
#           name: tekton-internal-bin
#           readOnly: true
#         - mountPath: /workspace
#           name: tekton-internal-workspace
#         - mountPath: /tekton/home
#           name: tekton-internal-home
#         - mountPath: /tekton/results
#           name: tekton-internal-results
#         - mountPath: /tekton/steps
#           name: tekton-internal-steps
#           readOnly: true
#         - mountPath: /var/run/secrets/kubernetes.io/serviceaccount
#           name: kube-api-access-vjd5x
#           readOnly: true
#     - args:
#         - -c
#         - echo foo > /shared/value && sleep infinity
#       command:
#         - /bin/bash
#       image: ghcr.io/lanzhiwang/tekton-releases/tektoncd/pipeline/cmd/nop:v0.57.0
#       imagePullPolicy: IfNotPresent
#       name: sidecar-value-sidecar
#       resources: {}
#       terminationMessagePath: /dev/termination-log
#       terminationMessagePolicy: File
#       volumeMounts:
#         - mountPath: /shared
#           name: shared
#         - mountPath: /var/run/secrets/kubernetes.io/serviceaccount
#           name: kube-api-access-vjd5x
#           readOnly: true
#   dnsPolicy: ClusterFirst
#   enableServiceLinks: true
#   initContainers:
#     - command:
#         - /ko-app/entrypoint
#         - init
#         - /ko-app/entrypoint
#         - /tekton/bin/entrypoint
#         - step-check-value
#       image: ghcr.io/lanzhiwang/tekton-releases/tektoncd/pipeline/cmd/entrypoint:v0.57.0
#       imagePullPolicy: IfNotPresent
#       name: prepare
#       resources: {}
#       terminationMessagePath: /dev/termination-log
#       terminationMessagePolicy: File
#       volumeMounts:
#         - mountPath: /tekton/bin
#           name: tekton-internal-bin
#         - mountPath: /tekton/steps
#           name: tekton-internal-steps
#         - mountPath: /var/run/secrets/kubernetes.io/serviceaccount
#           name: kube-api-access-vjd5x
#           readOnly: true
#       workingDir: /
#     - args:
#         - -c
#         - |
#           scriptfile="/tekton/scripts/script-0-29bnn"
#           touch ${scriptfile} && chmod +x ${scriptfile}
#           cat > ${scriptfile} << '_EOF_'
#           IyEvYmluL2Jhc2gKc2V0IC14ClZBTFVFPSQoY2F0IC9zaGFyZWQvdmFsdWUpCltbICRWQUxVRSA9PSAnZm9vJyBdXQo=
#           _EOF_
#           /tekton/bin/entrypoint decode-script "${scriptfile}"
#       command:
#         - sh
#       image: ghcr.io/lanzhiwang/chainguard/busybox:v1.0.0
#       imagePullPolicy: IfNotPresent
#       name: place-scripts
#       resources: {}
#       terminationMessagePath: /dev/termination-log
#       terminationMessagePolicy: File
#       volumeMounts:
#         - mountPath: /tekton/scripts
#           name: tekton-internal-scripts
#         - mountPath: /tekton/bin
#           name: tekton-internal-bin
#         - mountPath: /var/run/secrets/kubernetes.io/serviceaccount
#           name: kube-api-access-vjd5x
#           readOnly: true
#   nodeName: 192.168.137.27
#   preemptionPolicy: PreemptLowerPriority
#   priority: 0
#   restartPolicy: Never
#   schedulerName: default-scheduler
#   securityContext: {}
#   serviceAccount: default
#   serviceAccountName: default
#   terminationGracePeriodSeconds: 30
#   tolerations:
#     - effect: NoExecute
#       key: node.kubernetes.io/not-ready
#       operator: Exists
#       tolerationSeconds: 30
#     - effect: NoExecute
#       key: node.kubernetes.io/unreachable
#       operator: Exists
#       tolerationSeconds: 30
#   volumes:
#     - emptyDir: {}
#       name: tekton-internal-workspace
#     - emptyDir: {}
#       name: tekton-internal-home
#     - emptyDir: {}
#       name: tekton-internal-results
#     - emptyDir: {}
#       name: tekton-internal-steps
#     - emptyDir: {}
#       name: tekton-internal-scripts
#     - emptyDir: {}
#       name: tekton-internal-bin
#     - downwardAPI:
#         defaultMode: 420
#         items:
#           - fieldRef:
#               apiVersion: v1
#               fieldPath: metadata.annotations['tekton.dev/ready']
#             path: ready
#       name: tekton-internal-downward
#     - emptyDir:
#         medium: Memory
#       name: tekton-creds-init-home-0
#     - emptyDir: {}
#       name: tekton-internal-run-0
#     - emptyDir: {}
#       name: shared
#     - name: kube-api-access-vjd5x
#       projected:
#         defaultMode: 420
#         sources:
#           - serviceAccountToken:
#               expirationSeconds: 3607
#               path: token
#           - configMap:
#               items:
#                 - key: ca.crt
#                   path: ca.crt
#               name: kube-root-ca.crt
#           - downwardAPI:
#               items:
#                 - fieldRef:
#                     apiVersion: v1
#                     fieldPath: metadata.namespace
#                   path: namespace
